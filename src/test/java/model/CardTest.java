package model;

import org.junit.Assert;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;


/**
 * Test for Card model
 */
public class CardTest {

    /**
     * Validating the Card constructor. No parameters.
     */
    @Test
    public void createCard_Always_ShouldPass(){
        Card card = new Card();
    }

    /**
     * Validating that a betId can be added to the Card.
     */
    @Test
    public void addBetIdToCard_WithValidValue_ShouldPass(){
        Card card = new Card();

        //act
        card.addBetId("25");
        card.addBetId("23");
        List<String> expect = new ArrayList<>();
        expect.add("25");
        expect.add("23");

        Assert.assertEquals("Could not add betIds",expect,card.getBetIds());
    }

    /**
     * Validating that adding a null betId on a card is not allowed.
     */
    @Test(expected = IllegalArgumentException.class)
    public void addBetId_WithNullValue_ShouldThrowIllegalArgumentsException(){
        //arrange
        Card card = new Card();

        //act
        card.addBetId(null);
    }

    /**
     * Validating that adding an empty betId on a card is not allowed.
     */
    @Test (expected = IllegalArgumentException.class)
    public void addBetId_WithEmptyValue_ShouldThrowIllegalArgumentsException(){
        //arrange
        Card card = new Card();

        //act
        card.addBetId("");
    }

    /**
     * Validating that betId can be generated by the card.
     */
    @Test
    public void generateBetId_Always_ShouldPass(){
        //arrange
        Card card = new Card();

        //act
        card.generateBetId();


    }

}